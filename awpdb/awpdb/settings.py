"""
Django settings for awpdb project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
# PR10198-02-24
from decouple import config, Csv
# PR2018-04-28
from django.utils.translation import ugettext_lazy as _
# PR2018-04-29
import dj_database_url
# PR2018-05-06 from https://simpleisbetterthancomplex.com/tips/2016/09/06/django-tip-14-messages-framework.html
from django.contrib.messages import constants as messages

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# PR10198-02-24
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
# PR10198-02-24
DEBUG = config('DEBUG', default=False, cast=bool)

# PR2018-02-24
# ALLOWED_HOSTS = ['www.appwap.org', 'appwap.org', '159.65.42.238', '127.0.0.1', ]
ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',  # PR2018-03-12

    'menu', # PR2018-05-08

    'accounts',  # PR2018-03-16
    'importing',  # PR2018-07-24
    'schools',   # PR2018-04-13
    'subjects',  # PR2018-07-20
    'students',  # PR2018-07-20

    'session_security', # PR2018-05-10
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # PR2018-05-10
    'session_security.middleware.SessionSecurityMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'awpdb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
# PR2018-03-02
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'templates/importing'),
            os.path.join(BASE_DIR, 'templates/schools'),
            os.path.join(BASE_DIR, 'templates/students'),
            os.path.join(BASE_DIR, 'templates/subjects'),
            os.path.join(BASE_DIR, 'accounts/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# PR2018-05-08 for django-simple-menu from http://django-simple-menu.readthedocs.io/en/latest/installation.html
TEMPLATE_CONTEXT_PROCESSORS = (
    "django.contrib.auth.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.request",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
    "django.core.context_processors.static",
    "django.core.context_processors.tz",
)

WSGI_APPLICATION = 'awpdb.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# PR2018-03-03 MySQL
#DATABASES = {
#'default': {
#    'ENGINE': 'django.db.backends.mysql',
#    'NAME': config('DB_NAME'),
#    'HOST': config('DB_HOST'),
#    'PORT':  config('DB_PORT'),
#    'USER': config('DB_USER'),
#    'PASSWORD': config('DB_PASSWORD'),
#}}
# PR2018-04-29 PostgresQL
DATABASES = {
    'default': dj_database_url.config(
        default=config('DATABASE_URL')
    )
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# PR2018-04-22
AUTH_USER_MODEL = 'accounts.User'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# PR2018-03-06 This line tells Django to append static to the base url when searching for static files.
STATIC_URL = '/static/'

# PR2018-03-03 Error: he STATICFILES_DIRS setting should not contain the STATIC_ROOT setting.
# PR2018-03-06 The STATICFILES_DIRS tells Django where to look for static files that are not tied to a particular app.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# PR 2018-03-06 STATIC_ROOT is the folder where all static files will be stored after a manage.py collectstatic.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# PR 2018-03-27
LOGIN_URL = 'login'
# PR 2018-03-20
LOGIN_REDIRECT_URL = 'home'
# PR 2018-03-19
LOGOUT_REDIRECT_URL = 'home'

# In global.settings.py: PR2018-07-30
# The number of days a password reset link is valid for
# PASSWORD_RESET_TIMEOUT_DAYS = 3


# PR 2018-03-27
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

LOGGING = {
    'version': 1,
    #'disable_existing_loggers': False,
    'disable_existing_loggers': True,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'simple': {
            'format': '[%(asctime)s] %(levelname)s %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'verbose': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s.%(funcName)s:%(lineno)d] %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
    },
    'handlers': {
        'dev_accounts_log': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': config('LOGGER_BASEDIR') + 'dev_accounts_log.log',
            'formatter': 'verbose'
        },
        'dev_awpdb_log': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': config('LOGGER_BASEDIR') + 'dev_awpdb_log.log',
            'formatter': 'verbose'
        },
        'dev_importing_log': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': config('LOGGER_BASEDIR') + 'dev_importing_log.log',
            'formatter': 'verbose'
        },
        'dev_schools_log': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': config('LOGGER_BASEDIR') + 'dev_schools_log.log',
            'formatter': 'verbose'
        },
        'dev_students_log': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': config('LOGGER_BASEDIR') + 'dev_students_log.log',
            'formatter': 'verbose'
        },
        'dev_subjects_log': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': config('LOGGER_BASEDIR') + 'dev_subjects_log.log',
            'formatter': 'verbose'
        },
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
        },
        'null': {
            'class': 'logging.NullHandler',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.db.backends': {'level': 'DEBUG',},
        'django': {'handlers': ['console'],},
        'django.request': {'handlers': ['mail_admins'], 'level': 'ERROR', 'propagate': False,},
        'django.security': {'handlers': ['mail_admins'], 'level': 'ERROR', 'propagate': False,},
        'py.warnings': {'handlers': ['console'],},
        'accounts': {'handlers': ['dev_accounts_log'], 'level': 'DEBUG', 'propagate': True,},
        'importing': {'handlers': ['dev_importing_log'], 'level': 'DEBUG', 'propagate': True,},
        'schools': {'handlers': ['dev_schools_log'], 'level': 'DEBUG', 'propagate': True,},
        'awpdb': {'handlers': ['dev_awpdb_log'], 'level': 'DEBUG', 'propagate': True,},
        'students': {'handlers': ['dev_students_log'], 'level': 'DEBUG', 'propagate': True,},
        'subjects': {'handlers': ['dev_subjects_log'], 'level': 'DEBUG', 'propagate': True,},
    }
}

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/
TIME_ZONE = 'America/Curacao'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# PR 2018-04-28 from https://medium.com/@nolanphillips/a-short-intro-to-translating-your-site-with-django-1-8-343ea839c89b
# Add LocaleMiddleware to MIDDLEWARE, it checks the incoming request for the user's preferred language settings.
# Add the LocaleMiddleware after SessionMiddleware and CacheMiddleware, and before the CommonMiddleware.
# Provide a lists of languages which your site supports.
LANGUAGES = (
    ('en', _('English')),
    ('nl', _('Dutch')),
)

# Set the default language for your site.
LANGUAGE_CODE = 'nl'

# Tell Django where the project's translation files should be.
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

# PR2018-05-06 from https://simpleisbetterthancomplex.com/tips/2016/09/06/django-tip-14-messages-framework.html
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# PR2018-05-10
SESSION_EXPIRE_AT_BROWSER_CLOSE=True
SESSION_SECURITY_WARN_AFTER = 540 # Time (in seconds) before the user should be warned. Default 540.
SESSION_SECURITY_EXPIRE_AFTER = 600 # Time (in seconds) before the user should be logged out. Default is 600.